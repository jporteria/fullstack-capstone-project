name: 'CI/CD'
on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]
jobs:
  lint_js:
      name: Lint JavaScript Files
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install JSHint
        run: npm install jshint --global
      - name: Run Linter
        run: |
          # This command finds all JavaScript files recursively and runs JSHint on them
          find ./giftlink-backend -name app.js -exec jshint {} +
          find ./giftlink-backend -name auth.js -exec jshint {} +
          find ./giftlink-backend -name giftRoutes.js -exec jshint {} +
          find ./giftlink-backend -name searchRoutes.js -exec jshint {} +
          echo "Linted all the js files successfully"
  # client_build:
  #   name: Build client
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout Repository
  #     uses: actions/checkout@v4
  #   - name: Install Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: 20
  #   - name: Run build
  #     run: |
  #       cd giftlink-frontend
  #       npm install
  #       npm run build
  #       echo "Client-side build successfully"
  create_docker_image:
    name: Build image
    runs-on: ubuntu-latest
    # needs: client_build
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4
  
      # Step 2: Set up Docker Buildx for advanced Docker builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
  
      # Step 3: Log in to GitHub Container Registry (ghcr.io)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.token }}
      - name: Checkout code
        uses: actions/checkout@v2
      # Step 4: Build and push the first image (giftlink)
      - name: Build and push giftlink image
        uses: docker/build-push-action@v5
        with:
          context: ./giftlink-backend # Assuming Dockerfile is inside a directory named 'giftlink'
          push: true
          tags: ghcr.io/${{ github.repository }}/giftlink:latest
  
      # Step 5: Build and push the second image (giftwebsite)
      - name: Build and push giftlink image
        uses: docker/build-push-action@v5
        with:
          context: ./giftlink-frontend # Assuming Dockerfile is inside a directory named 'giftwebsite'
          push: true
          tags: ghcr.io/${{ github.repository }}/giftwebsite:latest 


